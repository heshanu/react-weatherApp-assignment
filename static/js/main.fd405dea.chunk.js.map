{"version":3,"sources":["Component/weatherPage/fetchData.js","template/weather3days.js","utils/weatheweek.js","template/weatherweek.js","Component/weatherPage/geo.js","template/login.js","template/logout.js","template/profile.js","App.js","reportWebVitals.js","index.js"],"names":["Weather3days","_ref","apiData1","React","createElement","className","JSON","stringify","week","cod","message","cnt","list","dt","main","temp","feels_like","temp_min","temp_max","pressure","sea_level","grnd_level","humidity","temp_kf","weather","id","description","icon","clouds","all","wind","speed","deg","gust","visibility","pop","rain","1h","sys","pod","dt_txt","city","name","coord","lat","lon","country","population","timezone","sunrise","sunset","Weatherweek","_React$useState","useState","_React$useState2","_slicedToArray","weekWeather","Geo","_useState","_useState2","_useState3","_useState4","latitude","setLatitude","_useState5","_useState6","longtitude","setLongtitude","_useState7","_useState8","apiData","setApiData","_useState9","_useState10","setApiData1","_useState11","_useState12","getState","setGetState","_useState13","_useState14","state","setState","_useState15","db","_useState16","apiUrl","concat","apiUrl1","kelvinToFarenheit","k","toFixed","useEffect","fetch","then","res","json","data","console","log","type","onChange","event","target","value","placeholder","onClick","style","width","src","alt","Fragment","margin","LoginButton","loginWithRedirect","useAuth0","LogoutButton","logout","logoutParams","returnTo","window","location","origin","Profile","_useAuth","user","isAuthenticated","isLoading","picture","email","column","float","content","display","clear","htmlFor","row","App","BrowserRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","Auth0Provider","domain","clientId","authorizationParams","redirect_uri"],"mappings":"i3DAEA,IC0CeA,EAvCM,SAAHC,GAAqB,IAAfC,EAAQD,EAARC,SACtB,OACEC,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,OAAKC,UAAU,UACZC,KAAKC,UAAUL,KA6BpBC,IAAAC,cAAA,aC+PSI,EArSF,CACX,CACEC,IAAK,MACLC,QAAS,EACTC,IAAK,GACLC,KAAM,CACJ,CACEC,GAAI,WACJC,KAAM,CACJC,KAAM,OACNC,WAAY,OACZC,SAAU,OACVC,SAAU,OACVC,SAAU,KACVC,UAAW,KACXC,WAAY,IACZC,SAAU,GACVC,SAAU,KAEZC,QAAS,CACP,CACEC,GAAI,IACJX,KAAM,OACNY,YAAa,aACbC,KAAM,QAGVC,OAAQ,CACNC,IAAK,IAEPC,KAAM,CACJC,MAAO,KACPC,IAAK,GACLC,KAAM,MAERC,WAAY,IACZC,IAAK,IACLC,KAAM,CACJC,KAAM,KAERC,IAAK,CACHC,IAAK,KAEPC,OAAQ,uBAGV,CACE3B,GAAI,WACJC,KAAM,CACJC,KAAM,OACNC,WAAY,OACZC,SAAU,MACVC,SAAU,OACVC,SAAU,KACVC,UAAW,KACXC,WAAY,IACZC,SAAU,GACVC,QAAS,KAEXC,QAAS,CACP,CACEC,GAAI,IACJX,KAAM,OACNY,YAAa,aACbC,KAAM,QAGVC,OAAQ,CACNC,IAAK,IAEPC,KAAM,CACJC,MAAO,KACPC,IAAK,IACLC,KAAM,MAERC,WAAY,IACZC,IAAK,GACLC,KAAM,CACJC,KAAM,KAERC,IAAK,CACHC,IAAK,KAEPC,OAAQ,uBAGV,CACE3B,GAAI,WACJC,KAAM,CACJC,KAAM,OACNC,WAAY,OACZC,SAAU,OACVC,SAAU,OACVC,SAAU,KACVC,UAAW,KACXC,WAAY,IACZC,SAAU,GACVC,QAAS,KAEXC,QAAS,CACP,CACEC,GAAI,IACJX,KAAM,OACNY,YAAa,aACbC,KAAM,QAGVC,OAAQ,CACNC,IAAK,IAEPC,KAAM,CACJC,MAAO,KACPC,IAAK,IACLC,KAAM,MAERC,WAAY,IACZC,IAAK,IACLC,KAAM,CACJC,KAAM,IAERC,IAAK,CACHC,IAAK,KAEPC,OAAQ,uBAEV,CACE3B,GAAI,WACJC,KAAM,CACJC,KAAM,OACNC,WAAY,OACZC,SAAU,OACVC,SAAU,OACVC,SAAU,KACVC,UAAW,KACXC,WAAY,IACZC,SAAU,GACVC,QAAS,GAEXC,QAAS,CACP,CACEC,GAAI,IACJX,KAAM,SACNY,YAAa,kBACbC,KAAM,QAGVC,OAAQ,CACNC,IAAK,KAEPC,KAAM,CACJC,MAAO,IACPC,IAAK,IACLC,KAAM,MAERC,WAAY,IACZC,IAAK,IACLG,IAAK,CACHC,IAAK,KAEPC,OAAQ,uBAEV,CACE3B,GAAI,WACJC,KAAM,CACJC,KAAM,OACNC,WAAY,OACZC,SAAU,MACVC,SAAU,OACVC,SAAU,KACVC,UAAW,KACXC,WAAY,IACZC,SAAU,GACVC,QAAS,KAEXC,QAAS,CACP,CACEC,GAAI,IACJX,KAAM,OACNY,YAAa,aACbC,KAAM,QAGVC,OAAQ,CACNC,IAAK,IAEPC,KAAM,CACJC,MAAO,KACPC,IAAK,IACLC,KAAM,MAERC,WAAY,IACZC,IAAK,GACLC,KAAM,CACJC,KAAM,KAERC,IAAK,CACHC,IAAK,KAEPC,OAAQ,uBAGV,CACE3B,GAAI,WACJC,KAAM,CACJC,KAAM,OACNC,WAAY,OACZC,SAAU,OACVC,SAAU,OACVC,SAAU,KACVC,UAAW,KACXC,WAAY,IACZC,SAAU,GACVC,QAAS,KAEXC,QAAS,CACP,CACEC,GAAI,IACJX,KAAM,OACNY,YAAa,aACbC,KAAM,QAGVC,OAAQ,CACNC,IAAK,IAEPC,KAAM,CACJC,MAAO,KACPC,IAAK,IACLC,KAAM,MAERC,WAAY,IACZC,IAAK,IACLC,KAAM,CACJC,KAAM,IAERC,IAAK,CACHC,IAAK,KAEPC,OAAQ,uBAEV,CACE3B,GAAI,WACJC,KAAM,CACJC,KAAM,OACNC,WAAY,OACZC,SAAU,OACVC,SAAU,OACVC,SAAU,KACVC,UAAW,KACXC,WAAY,IACZC,SAAU,GACVC,QAAS,GAEXC,QAAS,CACP,CACEC,GAAI,IACJX,KAAM,SACNY,YAAa,kBACbC,KAAM,QAGVC,OAAQ,CACNC,IAAK,KAEPC,KAAM,CACJC,MAAO,IACPC,IAAK,IACLC,KAAM,MAERC,WAAY,IACZC,IAAK,IACLG,IAAK,CACHC,IAAK,KAEPC,OAAQ,wBAGZC,KAAM,CACJhB,GAAI,QACJiB,KAAM,QACNC,MAAO,CACLC,IAAK,MACLC,IAAK,OAEPC,QAAS,KACTC,WAAY,KACZC,SAAU,KACVC,QAAS,WACTC,OAAQ,cCnPCC,EAxCK,WAAM,IAAAC,EACcjD,IAAMkD,SAAS7C,GAAK8C,EAAAC,YAAAH,EAAA,GAAnDI,EAAWF,EAAA,GAAgBA,EAAA,GAElC,OACEnD,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,OAAKC,UAAU,UACbF,IAAAC,cAAA,UAAI,mBACHE,KAAKC,UAAUiD,eCkMXC,EAzMH,WAAM,IAAAC,EACgBL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAAhBE,GAAbD,EAAA,GAAaA,EAAA,GACIN,mBAAS,KAAGQ,EAAAN,YAAAK,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAAAG,EACQX,mBAAS,IAAGY,EAAAV,YAAAS,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAAAG,EAEFf,mBAAS,IAAGgB,EAAAd,YAAAa,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAAAG,EACMnB,mBAAS,IAAGoB,EAAAlB,YAAAiB,EAAA,GAArCtE,EAAQuE,EAAA,GAAEC,EAAWD,EAAA,GAAAE,EAEItB,mBAAS,WAAUuB,EAAArB,YAAAoB,EAAA,GAA5CE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAAAG,EACF1B,mBAAS,WAAU2B,EAAAzB,YAAAwB,EAAA,GAAtCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAAAG,EAEc9B,mBAAS+B,GAAGC,EAAA9B,YAAA4B,EAAA,GAK1CG,GALWD,EAAA,GAAeA,EAAA,GAKpB,qDAAAE,OAAwDN,EAAK,WAAAM,OAD1D,qCAGTC,EAAO,gDAAAD,OAAmDzB,EAAQ,KAAAyB,OAAIrB,EAAU,+CAoDhFuB,EAAoB,SAACC,GACzB,OAAQA,EAAI,QAAQC,QAAQ,IAkB9B,OAfAC,oBAAU,WACRC,MAAMP,GACHQ,KAAK,SAACC,GAAG,OAAKA,EAAIC,SAClBF,KAAK,SAACG,GAAI,OAAK1B,EAAW0B,KAC7BC,QAAQC,IAAI7F,KAAKC,UAAU+D,KAC1B,CAACgB,IAGJM,oBAAU,WACRC,MAAML,GACHM,KAAK,SAACC,GAAG,OAAKA,EAAIC,SAClBF,KAAK,SAACG,GAAI,OAAKvB,EAAYuB,KAC9BC,QAAQC,IAAIjG,IACX,CAACsF,IAGFrF,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAQC,UAAU,oDAChBF,IAAAC,cAAA,UAAI,sBAEND,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,OAAKC,UAAU,qEACbF,IAAAC,cAAA,OAAKC,UAAU,YACbF,IAAAC,cAAA,SAAOC,UAAU,kBAAiB,qBAEpCF,IAAAC,cAAA,OAAKC,UAAU,YACbF,IAAAC,cAAA,SACEgG,KAAK,OACL3E,GAAG,gBACHpB,UAAU,eACVgG,SAvDS,SAACC,GACpBxB,EAAYwB,EAAMC,OAAOC,QAuDfA,MAAO3B,EACP4B,YAAY,mBAEdtG,IAAAC,cAAA,SACEqG,YAAY,iBACZL,KAAK,OACL3E,GAAG,gBACHpB,UAAU,eACVgG,SAvDU,SAACC,GACrBvC,EAAYuC,EAAMC,OAAOC,QAuDfA,MAAO1C,IAET3D,IAAAC,cAAA,SACEqG,YAAY,kBACZL,KAAK,OACL3E,GAAG,gBACHpB,UAAU,eACVgG,SApEW,SAACC,GACtBnC,EAAcmC,EAAMC,OAAOC,OAC3BN,QAAQC,OAmEEK,MAAOtC,KAGVW,GACC1E,IAAAC,cAAA,UAAQC,UAAU,uBAAuBqG,QAhE7B,WACpBxB,EAASL,KA+DgE,UAIlEX,GAAcJ,GACb3D,IAAAC,cAAA,UAAQC,UAAU,uBAAuBqG,QAjE5B,WACrBxB,EAASL,KAgEiE,UAIpE1E,IAAAC,cAAA,UAAQC,UAAU,sBAAsBqG,QAlG5B,WAClB3C,EAAY,IACZI,EAAc,IACdW,EAAY,MA+FwD,UAKhE3E,IAAAC,cAAA,OAAKC,UAAU,oBAAoBsG,MAAO,CAAEC,MAAO,SAChDtC,EAAQxD,KACPX,IAAAC,cAAA,OAAKC,UAAU,yBACbF,IAAAC,cAAA,OACEyG,IAAG,mCAAAtB,OAAqCjB,EAAQ9C,QAAQ,GAAGG,KAAI,QAC/DmF,IAAI,sBACJzG,UAAU,iBAGZF,IAAAC,cAAA,KAAGC,UAAU,MACVoF,EAAkBnB,EAAQxD,KAAKC,MAAM,UAGxCZ,IAAAC,cAAA,KAAGC,UAAU,MACXF,IAAAC,cAAA,KAAGC,UAAU,0BAA6B,IAC1CF,IAAAC,cAAA,cAASkE,EAAQ5B,OAGnBvC,IAAAC,cAAA,OAAKC,UAAU,YACbF,IAAAC,cAAA,OAAKC,UAAU,YACbF,IAAAC,cAAA,SACED,IAAAC,cAAA,KAAGC,UAAU,4BAA+B,IAC5CF,IAAAC,cAAA,cACGqF,EAAkBnB,EAAQxD,KAAKG,UAAU,WAG9Cd,IAAAC,cAAA,SACED,IAAAC,cAAA,KAAGC,UAAU,4BAA+B,IAC5CF,IAAAC,cAAA,cACGqF,EAAkBnB,EAAQxD,KAAKI,UAAU,YAIhDf,IAAAC,cAAA,OAAKC,UAAU,YACbF,IAAAC,cAAA,SACG,IACDD,IAAAC,cAAA,cAASkE,EAAQ9C,QAAQ,GAAGV,OAE9BX,IAAAC,cAAA,SACED,IAAAC,cAAA,cACG,SAUXD,IAAAC,cAAAD,IAAA4G,SAAA,KACE5G,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,SAAG,oBAKXD,IAAAC,cAACJ,EAAY,CAACE,SAAUA,MC1MxByG,EAAQ,CACZK,OAAQ,uBAYKC,EAVK,WAAM,IAChBC,EAAsBC,cAAtBD,kBAER,OACE/G,IAAAC,cAAA,UAAQuG,MAAOA,EAAOD,QAAS,kBAAMQ,MAAqB,WCI/CE,EAVM,WAAM,IACjBC,EAAWF,cAAXE,OAER,OACElH,IAAAC,cAAA,UAAQsG,QAAS,kBAAMW,EAAO,CAAEC,aAAc,CAAEC,SAAUC,OAAOC,SAASC,YAAa,YC8B5EC,EAlCC,WAAM,IAAAC,EACyBT,cAArCU,EAAID,EAAJC,KAAMC,EAAeF,EAAfE,gBAAiBC,EAASH,EAATG,UAC/B,GAAIA,EACF7B,QAAQC,IAAI,gBACP,GAAK2B,GAEL,IAAKC,GAAaD,EAAiB,KAChCpF,EAAyBmF,EAAzBnF,KAAMsF,EAAmBH,EAAnBG,QAASC,EAAUJ,EAAVI,MACnBC,EAAS,CACXC,MAAO,OACPvB,MAAO,OAQT,OACEzG,IAAAC,cAAA,OAAKC,UAAU,MAAMsG,MANb,CACRyB,QAAS,GACTC,QAAS,QACTC,MAAO,SAILnI,IAAAC,cAAA,OAAKC,UAAU,SAASsG,MAAOuB,GAC7B/H,IAAAC,cAAA,SAAOmI,QAAQ,QAAO,QACtBpI,IAAAC,cAAA,UAAKsC,GACLvC,IAAAC,cAAA,SAAOmI,QAAQ,SAAQ,UACvBpI,IAAAC,cAAA,SAAI6H,IAEN9H,IAAAC,cAAA,OAAKC,UAAU,SAASsG,MAAOuB,GAC7B/H,IAAAC,cAAA,OAAKyG,IAAKmB,YAtBhB9B,QAAQC,IAAI,kBAAmB2B,ICM/BI,EAAS,CACXC,MAAO,OACPvB,MAAO,OAGL4B,EAAM,CACRJ,QAAS,GACTC,QAAS,QACTC,MAAO,QAgCMG,MA9Bf,WAAe,IAAAb,EAC0BT,cAA/BW,EAAeF,EAAfE,gBAER,OAFkCF,EAATG,UAGvB5H,IAAAC,cAAAD,IAAA4G,SAAA,KACE5G,IAAAC,cAAA,UAAI,6BACJD,IAAAC,cAAA,UAAI,WAAS0H,EAAkB,YAAc,gBAC7C3H,IAAAC,cAAA,OAAMuG,MAAO6B,GACXrI,IAAAC,cAAA,OAAMuG,MAAOuB,GACX/H,IAAAC,cAAC6G,EAAW,MACZ9G,IAAAC,cAACgH,EAAY,OAEfjH,IAAAC,cAAA,OAAMuG,MAAOuB,GACX/H,IAAAC,cAACuH,EAAO,QAGZxH,IAAAC,cAACsI,IAAa,KACZvI,IAAAC,cAACuI,IAAM,KACLxI,IAAAC,cAACwI,IAAK,CAACC,KAAK,eAAeC,QAAS3I,IAAAC,cAAC+C,EAAW,UAGpDhD,IAAAC,cAAA,WACC0H,GAAmB3H,IAAAC,cAACqD,EAAG,MACxBtD,IAAAC,cAAA,WACC0H,GAAmB3H,IAAAC,cAAC+C,EAAW,MAChChD,IAAAC,cAAA,aCrCS2I,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAArD,KAAAoD,EAAAE,KAAA,UAAqBtD,KAAK,SAAA7F,GAAiD,IAA9CoJ,EAAMpJ,EAANoJ,OAAQC,EAAMrJ,EAANqJ,OAAQC,EAAMtJ,EAANsJ,OAAQC,EAAMvJ,EAANuJ,OAAQC,EAAOxJ,EAAPwJ,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,YCGDU,IAASC,WAAWC,SAASC,eAAe,SAEpDC,OACH3J,IAAAC,cAACD,IAAM4J,WAAU,KACf5J,IAAAC,cAAC4J,IAAa,CACZC,OAAO,oCACPC,SAAS,mCACTC,oBAAqB,CACnBC,aAAc5C,OAAOC,SAASC,SAGhCvH,IAAAC,cAACqI,EAAG,SAQVM","file":"static/js/main.fd405dea.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst fetchData = async (latitude, longtitude) => {\r\n  // const url = `api.openweathermap.org/data/2.5/forecast/daily?lat=latitude&lon=longtitude&appid=process.env.REACT_APP_WEATHER_API_KEY`;\r\n  // //const url = `https://api.brightsky.dev/weather?lat=52&lon=7.6&date=2020-04-21`;\r\n  // const response = await fetch(url);\r\n  // const data = await response.json();\r\n  // console.log(data);\r\n  // return data;\r\n};\r\n\r\nexport default fetchData;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"./template.css\";\r\n\r\nconst Weather3days = ({ apiData1 }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm\">\r\n          {JSON.stringify(apiData1)}\r\n          {/*apiData1.list[0].weather.map((m, index) => {\r\n            return (\r\n              <div key={index}>\r\n                {\r\n                  <div>\r\n                    <Card style={{ width: \"18rem\" }}>\r\n                      <Card.Img\r\n                        alt=\"weather status icon\"\r\n                        className=\"weather-icon\"\r\n                        variant=\"top\"\r\n                        src={`http://openweathermap.org/img/w/${m.icon}.png`}\r\n                      />\r\n                      <Card.Body>\r\n                        <Card.Title>{store3days.city.country}</Card.Title>\r\n                        <Card.Text>{store3days.list[0].main.temp}C</Card.Text>\r\n                        <Card.Text>{m.description}</Card.Text>\r\n                        <Card.Text>{store3days.list[0].dt_txt}</Card.Text>\r\n\r\n                        <Button variant=\"primary\">Go somewhere</Button>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </div>\r\n                }\r\n              </div>\r\n            );\r\n          })*/}\r\n        </div>\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather3days;\r\n","import React from \"react\";\r\nconst week = [\r\n  {\r\n    cod: \"200\",\r\n    message: 0,\r\n    cnt: 96,\r\n    list: [\r\n      {\r\n        dt: 1661875200,\r\n        main: {\r\n          temp: 296.34,\r\n          feels_like: 296.02,\r\n          temp_min: 296.34,\r\n          temp_max: 298.24,\r\n          pressure: 1015,\r\n          sea_level: 1015,\r\n          grnd_level: 933,\r\n          humidity: 50,\r\n          temp_kf: -1.9,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: \"Rain\",\r\n            description: \"light rain\",\r\n            icon: \"10d\",\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 97,\r\n        },\r\n        wind: {\r\n          speed: 1.06,\r\n          deg: 66,\r\n          gust: 2.16,\r\n        },\r\n        visibility: 10000,\r\n        pop: 0.32,\r\n        rain: {\r\n          \"1h\": 0.13,\r\n        },\r\n        sys: {\r\n          pod: \"d\",\r\n        },\r\n        dt_txt: \"2022-08-30 16:00:00\",\r\n      },\r\n\r\n      {\r\n        dt: 1661878800,\r\n        main: {\r\n          temp: 296.31,\r\n          feels_like: 296.07,\r\n          temp_min: 296.2,\r\n          temp_max: 296.31,\r\n          pressure: 1015,\r\n          sea_level: 1015,\r\n          grnd_level: 932,\r\n          humidity: 53,\r\n          temp_kf: 0.11,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: \"Rain\",\r\n            description: \"light rain\",\r\n            icon: \"10d\",\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 95,\r\n        },\r\n        wind: {\r\n          speed: 1.58,\r\n          deg: 103,\r\n          gust: 3.52,\r\n        },\r\n        visibility: 10000,\r\n        pop: 0.4,\r\n        rain: {\r\n          \"1h\": 0.24,\r\n        },\r\n        sys: {\r\n          pod: \"d\",\r\n        },\r\n        dt_txt: \"2022-08-30 17:00:00\",\r\n      },\r\n\r\n      {\r\n        dt: 1661882400,\r\n        main: {\r\n          temp: 294.94,\r\n          feels_like: 294.74,\r\n          temp_min: 292.84,\r\n          temp_max: 294.94,\r\n          pressure: 1015,\r\n          sea_level: 1015,\r\n          grnd_level: 931,\r\n          humidity: 60,\r\n          temp_kf: 2.1,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: \"Rain\",\r\n            description: \"light rain\",\r\n            icon: \"10n\",\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 93,\r\n        },\r\n        wind: {\r\n          speed: 1.97,\r\n          deg: 157,\r\n          gust: 3.39,\r\n        },\r\n        visibility: 10000,\r\n        pop: 0.33,\r\n        rain: {\r\n          \"1h\": 0.2,\r\n        },\r\n        sys: {\r\n          pod: \"n\",\r\n        },\r\n        dt_txt: \"2022-08-30 18:00:00\",\r\n      },\r\n      {\r\n        dt: 1662217200,\r\n        main: {\r\n          temp: 294.14,\r\n          feels_like: 293.99,\r\n          temp_min: 294.14,\r\n          temp_max: 294.14,\r\n          pressure: 1014,\r\n          sea_level: 1014,\r\n          grnd_level: 931,\r\n          humidity: 65,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 804,\r\n            main: \"Clouds\",\r\n            description: \"overcast clouds\",\r\n            icon: \"04d\",\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 100,\r\n        },\r\n        wind: {\r\n          speed: 0.91,\r\n          deg: 104,\r\n          gust: 1.92,\r\n        },\r\n        visibility: 10000,\r\n        pop: 0.53,\r\n        sys: {\r\n          pod: \"d\",\r\n        },\r\n        dt_txt: \"2022-09-03 15:00:00\",\r\n      },\r\n      {\r\n        dt: 1661878800,\r\n        main: {\r\n          temp: 296.31,\r\n          feels_like: 296.07,\r\n          temp_min: 296.2,\r\n          temp_max: 296.31,\r\n          pressure: 1015,\r\n          sea_level: 1015,\r\n          grnd_level: 932,\r\n          humidity: 53,\r\n          temp_kf: 0.11,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: \"Rain\",\r\n            description: \"light rain\",\r\n            icon: \"10d\",\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 95,\r\n        },\r\n        wind: {\r\n          speed: 1.58,\r\n          deg: 103,\r\n          gust: 3.52,\r\n        },\r\n        visibility: 10000,\r\n        pop: 0.4,\r\n        rain: {\r\n          \"1h\": 0.24,\r\n        },\r\n        sys: {\r\n          pod: \"d\",\r\n        },\r\n        dt_txt: \"2022-08-30 17:00:00\",\r\n      },\r\n\r\n      {\r\n        dt: 1661882400,\r\n        main: {\r\n          temp: 294.94,\r\n          feels_like: 294.74,\r\n          temp_min: 292.84,\r\n          temp_max: 294.94,\r\n          pressure: 1015,\r\n          sea_level: 1015,\r\n          grnd_level: 931,\r\n          humidity: 60,\r\n          temp_kf: 2.1,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 500,\r\n            main: \"Rain\",\r\n            description: \"light rain\",\r\n            icon: \"10n\",\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 93,\r\n        },\r\n        wind: {\r\n          speed: 1.97,\r\n          deg: 157,\r\n          gust: 3.39,\r\n        },\r\n        visibility: 10000,\r\n        pop: 0.33,\r\n        rain: {\r\n          \"1h\": 0.2,\r\n        },\r\n        sys: {\r\n          pod: \"n\",\r\n        },\r\n        dt_txt: \"2022-08-30 18:00:00\",\r\n      },\r\n      {\r\n        dt: 1662217200,\r\n        main: {\r\n          temp: 294.14,\r\n          feels_like: 293.99,\r\n          temp_min: 294.14,\r\n          temp_max: 294.14,\r\n          pressure: 1014,\r\n          sea_level: 1014,\r\n          grnd_level: 931,\r\n          humidity: 65,\r\n          temp_kf: 0,\r\n        },\r\n        weather: [\r\n          {\r\n            id: 804,\r\n            main: \"Clouds\",\r\n            description: \"overcast clouds\",\r\n            icon: \"04d\",\r\n          },\r\n        ],\r\n        clouds: {\r\n          all: 100,\r\n        },\r\n        wind: {\r\n          speed: 0.91,\r\n          deg: 104,\r\n          gust: 1.92,\r\n        },\r\n        visibility: 10000,\r\n        pop: 0.53,\r\n        sys: {\r\n          pod: \"d\",\r\n        },\r\n        dt_txt: \"2022-09-03 15:00:00\",\r\n      },\r\n    ],\r\n    city: {\r\n      id: 3163858,\r\n      name: \"Zocca\",\r\n      coord: {\r\n        lat: 44.34,\r\n        lon: 10.99,\r\n      },\r\n      country: \"IT\",\r\n      population: 4593,\r\n      timezone: 7200,\r\n      sunrise: 1661834187,\r\n      sunset: 1661882248,\r\n    },\r\n  },\r\n];\r\n\r\nexport default week;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"./template.css\";\r\nimport week from \".././utils/weatheweek.js\";\r\n\r\nconst Weatherweek = () => {\r\n  const [weekWeather, setWeekWeather] = React.useState(week);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm\">\r\n          <h1>Weekly Weather!</h1>\r\n          {JSON.stringify(weekWeather)}\r\n\r\n          {/*weekWeather.list[0].weather.map((m, index) => {\r\n            return (\r\n              <div key={index}>\r\n                {\r\n                  <div>\r\n                    <Card style={{ width: \"18rem\" }}>\r\n                      <Card.Img\r\n                        alt=\"weather status icon\"\r\n                        className=\"weather-icon\"\r\n                        variant=\"top\"\r\n                        src={`http://openweathermap.org/img/w/${m.icon}.png`}\r\n                      />\r\n                      <Card.Body>\r\n                        <Card.Title>{weekWeather.city.country}</Card.Title>\r\n                        <Card.Text>{weekWeather.list[0].main.temp}</Card.Text>\r\n                        <Card.Text>{m.description}</Card.Text>\r\n                        <Button variant=\"primary\">Go somewhere</Button>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </div>\r\n                }\r\n              </div>\r\n            );\r\n              })*/}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weatherweek;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport fetchData from \"./fetchData\";\r\nimport Weather3days from \"../../template/weather3days\";\r\nimport Weatherweek from \"../../template/weatherweek\";\r\n\r\nimport db from \"../../utils/weather4days.json\";\r\n\r\nconst Geo = () => {\r\n  const [location, setLocation] = useState(\"\");\r\n  const [latitude, setLatitude] = useState(\"\");\r\n  const [longtitude, setLongtitude] = useState(\"\");\r\n\r\n  const [apiData, setApiData] = useState({});\r\n  const [apiData1, setApiData1] = useState({});\r\n\r\n  const [getState, setGetState] = useState(\"colombo\");\r\n  const [state, setState] = useState(\"colombo\");\r\n\r\n  const [store3days, setStore3days] = useState(db);\r\n\r\n  //const url =\"https://pro.openweathermap.org/data/2.5/forecast/hourly?lat=latitude&lon=longtitude&appid=process.env.REACT_APP_WEATHER_API_KEY\";\r\n  //const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\r\n  const apiKey = \"3088d6ae04c9fcf5da6c42d54fe54922\";\r\n  const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${state}&appid=${apiKey}`;\r\n\r\n  const apiUrl1 = `http://api.weatherapi.com/v1/forecast.json?q=${latitude},${longtitude}&key=61701315568d4faaa22163510231303&days=1`;\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(location);\r\n    if (location) {\r\n      setLocation((l) => {\r\n        return [location];\r\n      });\r\n      setLatitude(\"\");\r\n      setLongtitude(\"\");\r\n    } else if (latitude && longtitude) {\r\n      setLatitude(latitude);\r\n      setLongtitude(longtitude);\r\n      console.log(latitude, longtitude);\r\n    } else {\r\n      alert(\"Please enter the location\");\r\n    }\r\n  };\r\n\r\n  const clearValues = () => {\r\n    setLatitude(\"\");\r\n    setLongtitude(\"\");\r\n    setGetState(\"\");\r\n  };\r\n  var projectStyle = {\r\n    width: 300,\r\n    height: 300,\r\n    border: 10,\r\n    backgroundColor: \"blue\",\r\n  };\r\n\r\n  const inputHandler = (event) => {\r\n    setGetState(event.target.value);\r\n  };\r\n\r\n  const inputLongitude = (event) => {\r\n    setLongtitude(event.target.value);\r\n    console.log();\r\n  };\r\n\r\n  const inputLatitude = (event) => {\r\n    setLatitude(event.target.value);\r\n  };\r\n\r\n  const submitHandler = () => {\r\n    setState(getState);\r\n  };\r\n\r\n  const submitHandler1 = () => {\r\n    setState(getState);\r\n  };\r\n\r\n  const kelvinToFarenheit = (k) => {\r\n    return (k - 273.15).toFixed(2);\r\n  };\r\n  //today weather\r\n  useEffect(() => {\r\n    fetch(apiUrl)\r\n      .then((res) => res.json())\r\n      .then((data) => setApiData(data));\r\n    console.log(JSON.stringify(apiData));\r\n  }, [apiUrl]);\r\n\r\n  //3days weather\r\n  useEffect(() => {\r\n    fetch(apiUrl1)\r\n      .then((res) => res.json())\r\n      .then((data) => setApiData1(data));\r\n    console.log(apiData1);\r\n  }, [apiUrl1]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"d-flex justify-content-center align-items-center\">\r\n        <h2>React Weather App</h2>\r\n      </header>\r\n      <div className=\"container\">\r\n        <div className=\"mt-3 d-flex flex-column justify-content-center align-items-center\">\r\n          <div className=\"col-auto\">\r\n            <label className=\"col-form-label\">Enter Location :</label>\r\n          </div>\r\n          <div className=\"col-auto\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"location-name\"\r\n              className=\"form-control\"\r\n              onChange={inputHandler}\r\n              value={getState}\r\n              placeholder=\"Enter Location\"\r\n            />\r\n            <input\r\n              placeholder=\"Enter Latitude\"\r\n              type=\"text\"\r\n              id=\"location-name\"\r\n              className=\"form-control\"\r\n              onChange={inputLatitude}\r\n              value={latitude}\r\n            />\r\n            <input\r\n              placeholder=\"Enter Longitude\"\r\n              type=\"text\"\r\n              id=\"location-name\"\r\n              className=\"form-control\"\r\n              onChange={inputLongitude}\r\n              value={longtitude}\r\n            />\r\n          </div>\r\n          {getState && (\r\n            <button className=\"btn btn-primary mt-2\" onClick={submitHandler}>\r\n              Search\r\n            </button>\r\n          )}\r\n          {longtitude && latitude && (\r\n            <button className=\"btn btn-primary mt-2\" onClick={submitHandler1}>\r\n              Search\r\n            </button>\r\n          )}\r\n          <button className=\"btn btn-danger mt-2\" onClick={clearValues}>\r\n            Clear\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"card mt-3 mx-auto\" style={{ width: \"60vw\" }}>\r\n          {apiData.main ? (\r\n            <div className=\"card-body text-center\">\r\n              <img\r\n                src={`http://openweathermap.org/img/w/${apiData.weather[0].icon}.png`}\r\n                alt=\"weather status icon\"\r\n                className=\"weather-icon\"\r\n              />\r\n\r\n              <p className=\"h2\">\r\n                {kelvinToFarenheit(apiData.main.temp)}&deg; C\r\n              </p>\r\n\r\n              <p className=\"h5\">\r\n                <i className=\"fas fa-map-marker-alt\"></i>{\" \"}\r\n                <strong>{apiData.name}</strong>\r\n              </p>\r\n\r\n              <div className=\"row mt-4\">\r\n                <div className=\"col-md-6\">\r\n                  <p>\r\n                    <i className=\"fas fa-temperature-low \"></i>{\" \"}\r\n                    <strong>\r\n                      {kelvinToFarenheit(apiData.main.temp_min)}&deg; C\r\n                    </strong>\r\n                  </p>\r\n                  <p>\r\n                    <i className=\"fas fa-temperature-high\"></i>{\" \"}\r\n                    <strong>\r\n                      {kelvinToFarenheit(apiData.main.temp_max)}&deg; C\r\n                    </strong>\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <p>\r\n                    {\" \"}\r\n                    <strong>{apiData.weather[0].main}</strong>\r\n                  </p>\r\n                  <p>\r\n                    <strong>\r\n                      {\" \"}\r\n                      {/*countries.getName(apiData.sys.country, \"en\", {\r\n                        select: \"official\",\r\n                      })*/}\r\n                    </strong>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <h1>Loading</h1>\r\n              <p>Please Retry!</p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Weather3days apiData1={apiData1} />\r\n    </div>\r\n  );\r\n};\r\nexport default Geo;\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nconst style = {\r\n  margin: \"10px 10px 10px 10px\",\r\n};\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n\r\n  return (\r\n    <button style={style} onClick={() => loginWithRedirect()}>\r\n      Log In\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LoginButton;\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LogoutButton = () => {\r\n  const { logout } = useAuth0();\r\n\r\n  return (\r\n    <button onClick={() => logout({ logoutParams: { returnTo: window.location.origin } })}>\r\n      Log Out\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst Profile = () => {\r\n  const { user, isAuthenticated, isLoading } = useAuth0();\r\n  if (isLoading) {\r\n    console.log(\"loading\");\r\n  } else if (!isAuthenticated) {\r\n    console.log(\"authenticated: \", isAuthenticated);\r\n  } else if (!isLoading && isAuthenticated) {\r\n    const { name, picture, email } = user;\r\n    var column = {\r\n      float: \"left\",\r\n      width: \"50%\",\r\n    };\r\n\r\n    var row = {\r\n      content: \"\",\r\n      display: \"table\",\r\n      clear: \"both\",\r\n    };\r\n    return (\r\n      <div className=\"row\" style={row}>\r\n        <div className=\"column\" style={column}>\r\n          <label htmlFor=\"Name\">Name</label>\r\n          <h1>{name}</h1>\r\n          <label htmlFor=\"Email\">Email:</label>\r\n          <p>{email}</p>\r\n        </div>\r\n        <div className=\"column\" style={column}>\r\n          <img src={picture} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { BrowserRouter, Link, Route, Routes, NavLink } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nimport Geo from \"./Component/weatherPage/geo\";\r\nimport Weather3days from \"./template/weather3days\";\r\nimport Weatherweek from \"./template/weatherweek\";\r\nimport Page404 from \"./template/Page404\";\r\n\r\nimport LoginButton from \"./template/login\";\r\nimport LogoutButton from \"./template/logout\";\r\nimport Profile from \"./template/profile\";\r\n\r\nvar column = {\r\n  float: \"left\",\r\n  width: \"50%\",\r\n};\r\n\r\nvar row = {\r\n  content: \"\",\r\n  display: \"table\",\r\n  clear: \"both\",\r\n};\r\nfunction App() {\r\n  const { isAuthenticated, isLoading } = useAuth0();\r\n\r\n  return (\r\n    <>\r\n      <h1>Welcome to WeatherApp123!</h1>\r\n      <h1>User is {isAuthenticated ? \"Logged in\" : \"Not LoggedIn\"}</h1>\r\n      <div  style={row}>\r\n        <div  style={column}>\r\n          <LoginButton />\r\n          <LogoutButton />\r\n        </div>\r\n        <div  style={column}>\r\n          <Profile />\r\n        </div>\r\n      </div>\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/weatherweek\" element={<Weatherweek />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n      <hr />\r\n      {isAuthenticated && <Geo />}\r\n      <hr />\r\n      {isAuthenticated && <Weatherweek />}\r\n      <br />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <Auth0Provider\r\n      domain=\"dev-m6bi62a4ol6yhcx8.jp.auth0.com\"\r\n      clientId=\"mNJIpXNPmi4RSIBgEY3k7kuePXaKTI1Y\"\r\n      authorizationParams={{\r\n        redirect_uri: window.location.origin,\r\n      }}\r\n    >\r\n      <App />\r\n    </Auth0Provider>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}